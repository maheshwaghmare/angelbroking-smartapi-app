{"version":3,"sources":["pages/login/index.js","components/welcome/index.js","App.js","reportWebVitals.js","index.js"],"names":["Login","onSuccess","useState","selfState","setSelfState","className","type","value","api_key","onChange","event","target","user_id","password","error","onClick","authUser","SmartAPI","generateSession","then","data","status","getProfile","response","console","log","errorcode","message","Welcome","user","name","App","Object","keys","length","userInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUA8EeA,EAzED,SAAC,GAAqB,IAAlBC,EAAiB,EAAjBA,UAEd,EAAgCC,mBAAS,CACrC,QAAY,GACZ,QAAY,GACZ,SAAa,GACb,MAAU,KAJd,mBAAKC,EAAL,KAAgBC,EAAhB,KAuCH,OACC,sBAAKC,UAAU,oBAAf,UACC,uCAES,6CACA,uBAAOC,KAAK,OAAOC,MAAOJ,EAAUK,QAASC,SAAW,SAACC,GACrDN,EAAa,2BAAKD,GAAN,IAAiBK,QAASE,EAAMC,OAAOJ,YAGvD,6CACA,uBAAOD,KAAK,OAAOC,MAAOJ,EAAUS,QAASH,SAAW,SAACC,GACrDN,EAAa,2BAAKD,GAAN,IAAiBS,QAASF,EAAMC,OAAOJ,YAGvD,8CACA,uBAAOD,KAAK,OAAOC,MAAOJ,EAAUU,SAAUJ,SAAW,SAACC,GACtDN,EAAa,2BAAKD,GAAN,IAAiBU,SAAUH,EAAMC,OAAOJ,YAIpDJ,EAAUW,MAEN,sBAAKT,UAAU,QAAf,oBAA+BF,EAAUW,SAEzC,KAGR,wBAAQC,QA3DC,WAEbX,EAAa,2BAAKD,GAAN,IAAiBW,MAAO,MAEpC,IAAIE,EAAW,IAAIC,WAAS,CACxBT,QAASL,EAAUK,UAGvBQ,EAASE,gBAAiBf,EAAUS,QAAUT,EAAUU,UACvDM,MAAK,SAACC,GAECA,EAAKC,OAKLL,EAASM,aAAaH,MAAK,SAACI,GACxBC,QAAQC,IAAK,aACbD,QAAQC,IAAKF,GACTA,EAASF,QACTpB,EAAWe,EAAUO,EAASH,SAKtChB,EAAa,2BAAKD,GAAN,IAAiBW,MAAM,IAAD,OAAMM,EAAKM,UAAX,aAAyBN,EAAKO,gBAkCpE,wBC9DGC,G,MARC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OACI,qBAAKxB,UAAU,iBAAf,SACI,0CAAawB,EAAKC,YC4BfC,EA7BH,WAEX,MAAgC7B,mBAAS,CACxC,SAAY,GACN,KAAS,KAFhB,mBAAKC,EAAL,KAAgBC,EAAhB,KAKA,OACC,qBAAKC,UAAU,cAAf,SACC,sBAAKA,UAAU,iBAAf,UACC,wDAEG2B,OAAOC,KAAM9B,EAAU0B,MAAOK,OAQ/B,mCACC,cAAC,EAAD,CAASL,KAAM1B,EAAU0B,SAR1B,cAAC,EAAD,CACC5B,UAAY,SAACe,EAAUmB,GACtBX,QAAQC,IAAK,WAAYU,GACzB/B,EAAa,2BAAKD,GAAN,IAAiBa,SAAUA,EAAUa,KAAMM,cCThDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2c222e40.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { SmartAPI } from \"smartapi-javascript\";\r\n\r\nimport './style.css';\r\n\r\nconst Login = ( { onSuccess } ) => {\r\n\r\n    let [selfState, setSelfState] = useState({\r\n        'api_key' : '',\r\n        'user_id' : '',\r\n        'password' : '',\r\n        'error' : '',\r\n    })\r\n\r\n    const validate = () => {\r\n        \r\n        setSelfState( {...selfState, error: '' } );\r\n        \r\n        let authUser = new SmartAPI({\r\n            api_key: selfState.api_key,\r\n        });\r\n\r\n        authUser.generateSession( selfState.user_id , selfState.password)\r\n        .then((data) => {\r\n\r\n            if( data.status ) {\r\n\r\n                /**\r\n                 * Get User Profile\r\n                 */\r\n                authUser.getProfile().then((response) => {\r\n                    console.log( 'User Data' );\r\n                    console.log( response );\r\n                    if( response.status ) {\r\n                        onSuccess( authUser, response.data );\r\n                    }\r\n                })\r\n\r\n            } else {\r\n                setSelfState( {...selfState, error: `[${data.errorcode}] ${data.message}` } );\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\treturn (\r\n\t\t<div className=\"ab-api-login-form\">\r\n\t\t\t<h2>Login</h2>\r\n\r\n            <label>API Key:</label>\r\n            <input type=\"text\" value={selfState.api_key} onChange={ (event) => {\r\n                setSelfState( {...selfState, api_key: event.target.value } );\r\n            }} />\r\n\t\t\t\r\n            <label>User ID:</label>\r\n            <input type=\"text\" value={selfState.user_id} onChange={ (event) => {\r\n                setSelfState( {...selfState, user_id: event.target.value } );\r\n            }} />\r\n\t\t\t\r\n            <label>Password:</label>\r\n            <input type=\"text\" value={selfState.password} onChange={ (event) => {\r\n                setSelfState( {...selfState, password: event.target.value } );\r\n            }} />\r\n\r\n            {\r\n                selfState.error\r\n                ?\r\n                    <div className=\"error\">Error: {selfState.error}</div>\r\n                :\r\n                    null\r\n            }\r\n\t\t\t\r\n            <button onClick={validate}>Submit</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Welcome = ( {user} ) => {\r\n    return (\r\n        <div className=\"ab-api-welcome\">\r\n            <h2>Welcome {user.name}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome;\r\n","import './App.css';\nimport Login from './pages/login/index'\nimport React, { useEffect, useState } from 'react';\nimport Welcome from './components/welcome/index';\n\nconst App = () => {\n\n\tlet [selfState, setSelfState] = useState({\n\t\t'authUser': {},\n        'user' : {},\n    });\n\n\treturn (\n\t\t<div className=\"ab-api-wrap\">\n\t\t\t<div className=\"ab-api-content\">\n\t\t\t\t<h1>Angle Broking SmartAPI</h1>\n\t\t\t\t{\n\t\t\t\t\t! Object.keys( selfState.user ).length ?\n\t\t\t\t\t\t<Login\n\t\t\t\t\t\t\tonSuccess={ (authUser, userInfo) => {\n\t\t\t\t\t\t\t\tconsole.log( 'userInfo', userInfo );\n\t\t\t\t\t\t\t\tsetSelfState( {...selfState, authUser: authUser, user: userInfo } );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t: \n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Welcome user={selfState.user} />\n\t\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}